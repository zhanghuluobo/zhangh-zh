import { QueryList, EventEmitter, ElementRef } from '@angular/core';
import { TabPanelComponent } from './tab-panel.component';
export declare const TABS_TEMPLATE = "\n\t<div #container class=\"tabs-container f-full\" [ngClass]=\"containerCls\">\n\t\t<div #header class=\"tabs-header f-row f-noshrink\"\n\t\t\t\t[style.width.px]=\"isHorizontal() ? headerWidth : null\"\n\t\t\t\t[style.height.px]=\"!isHorizontal() ? headerHeight : null\"\n\t\t\t\t[class.tabs-header-plain]=\"plain\"\n\t\t\t\t[class.tabs-header-narrow]=\"narrow\"\n\t\t\t\t[class.tabs-header-noborder]=\"!border\"\n\t\t\t\t[ngClass]=\"headerCls\">\n\t\t\t<div *ngIf=\"isScrollerVisible()\" class=\"tabs-scroller-left f-order1\" (click)=\"scrollBy(-scrollIncrement)\"></div>\n\t\t\t<div *ngIf=\"isScrollerVisible()\" class=\"tabs-scroller-right f-order3\" (click)=\"scrollBy(scrollIncrement)\"></div>\n\t\t\t<div #tabsWrap class=\"tabs-wrap f-column f-full f-order2\">\n\t\t\t\t<ul *ngIf=\"isScrollable()\" class=\"tabs tabs-scrollable f-full\" style=\"width:100%\"></ul>\n\t\t\t\t<ul #tabs class=\"tabs f-full\"\n\t\t\t\t\t\t[ngStyle]=\"tabsStyle\"\n\t\t\t\t\t\t[class.f-row]=\"!isHorizontal()\"\n\t\t\t\t\t\t[class.f-column]=\"isHorizontal()\"\n\t\t\t\t\t\t[class.tabs-scrollable]=\"isScrollable()\"\n\t\t\t\t\t\t[class.tabs-narrow]=\"narrow\">\n\t\t\t\t\t<li class=\"f-inline-row\" *ngFor=\"let panel of usedPanels\"\n\t\t\t\t\t\t\t[class.f-full]=\"justified\"\n\t\t\t\t\t\t\t[class.f-noshrink]=\"isScrollable()\"\n\t\t\t\t\t\t\t[class.tabs-selected]=\"panel.selected\"\n\t\t\t\t\t\t\t[class.tabs-disabled]=\"panel.disabled\"\n\t\t\t\t\t\t\t[class.tabs-first]=\"panel.isFirst\"\n\t\t\t\t\t\t\t[class.tabs-last]=\"panel.isLast\"\n\t\t\t\t\t\t\t(click)=\"onClickTab(panel,$event)\">\n\t\t\t\t\t\t<a href=\"javascript:;\" class=\"tabs-inner f-inline-row f-full\"\n\t\t\t\t\t\t\t\t[style.width.px]=\"!isHorizontal() ? tabWidth : null\"\n\t\t\t\t\t\t\t\t[style.height.px]=\"isHorizontal() ? tabHeight : null\"\n\t\t\t\t\t\t\t\t[ngClass]=\"panel.headerCls\"\n\t\t\t\t\t\t\t\t[ngStyle]=\"panel.headerStyle\">\n\t\t\t\t\t\t\t<span *ngIf=\"!panel.headerTemplate\" class=\"tabs-title\"\n\t\t\t\t\t\t\t\t\t[class.tabs-with-icon]=\"panel.iconCls\"\n\t\t\t\t\t\t\t\t\t[class.tabs-closable]=\"panel.closable\">{{panel.title}}</span>\n\t\t\t\t\t\t\t<ng-template *ngIf=\"panel.headerTemplate\" [euiTabHeaderTemplate]=\"panel.headerTemplate.template\" [tab]=\"panel\"></ng-template>\n\t\t\t\t\t\t\t<span *ngIf=\"panel.iconCls\" class=\"tabs-icon\" [ngClass]=\"panel.iconCls\"></span>\n\t\t\t\t\t\t\t<a *ngIf=\"panel.closable\" href=\"javascript:;\" class=\"tabs-close\" tabindex=\"-1\" (click)=\"onCloseTab(panel,$event)\"></a>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"tabs-panels f-column f-full\" [class.tabs-panels-noborder]=\"!border\" [ngClass]=\"bodyCls\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n";
export declare class TabsComponent {
    panels: QueryList<TabPanelComponent>;
    containerRef: ElementRef;
    headerRef: ElementRef;
    tabsWrapRef: ElementRef;
    tabsRef: ElementRef;
    headerWidth: number;
    headerHeight: number;
    tabWidth: number;
    tabHeight: number;
    tabPosition: string;
    plain: boolean;
    narrow: boolean;
    justified: boolean;
    border: boolean;
    scrollable: boolean;
    scrollIncrement: number;
    tabSelect: EventEmitter<{}>;
    tabUnselect: EventEmitter<{}>;
    tabClose: EventEmitter<{}>;
    selectedIndexChange: EventEmitter<{}>;
    selectedHis: any[];
    readonly containerCls: string;
    readonly headerCls: string;
    readonly bodyCls: string;
    readonly tabsStyle: {
        left: string;
    };
    isHorizontal(): boolean;
    isScrollable(): boolean;
    isScrollerVisible(): boolean;
    private _selectedIndex;
    selectedIndex: number;
    private _scrollDistance;
    scrollDistance: number;
    readonly usedPanels: TabPanelComponent[];
    readonly maxScrollDistance: number;
    setScrollers(): void;
    ngAfterContentInit(): void;
    onClickTab(panel: any, event: any): void;
    onCloseTab(panel: any, event: any): void;
    initPanels(): void;
    initSelectedPanel(): void;
    addHis(panel: any): void;
    removeHis(panel: any): void;
    backHis(): void;
    select(index: number): void;
    unselect(index: number): void;
    getPanel(index: number): TabPanelComponent;
    getPanelIndex(tab: TabPanelComponent): number;
    getSelectedPanel(): TabPanelComponent;
    scrollBy(distance: number): void;
}
