import { QueryList, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';
import { GridColumnComponent } from './grid-column.component';
import { GridColumnGroupComponent } from './grid-column-group.component';
import { ListBaseComponent } from '../base/list-base.component';
export declare const GRIDBASE_TEMPLATE = "\n\t<div class=\"panel-body panel-body-noheader datagrid datagrid-wrap f-full f-column\" \n\t\t\t[class.panel-body-noborder]=\"!border\">\n\t\t<eui-pagination *ngIf=\"pagination && (pagePosition=='both' || pagePosition=='top')\" class=\"datagrid-pager datagrid-pager-top\" \n\t\t\t\t[total]=\"total\" \n\t\t\t\t[pageSize]=\"pageSize\" \n\t\t\t\t[pageNumber]=\"pageNumber\" \n\t\t\t\t[loading]=\"loading\"\n\t\t\t\t(pageChange)=\"onPageChange($event)\"></eui-pagination>\n\t\t<div #view class=\"datagrid-view f-row f-full\">\n\t\t\t<eui-grid-view #view1 *ngIf=\"leftGroup || leftColumns\" \n\t\t\t\t\t[viewIndex]=\"1\" \n\t\t\t\t\t[columnGroup]=\"leftGroup\" \n\t\t\t\t\t[columns]=\"leftColumns\" \n\t\t\t\t\t[rows]=\"rows\" \n\t\t\t\t\t[style.width]=\"leftFrozenWidth\"></eui-grid-view>\n\t\t\t<eui-grid-view #view2 \n\t\t\t\t\t[viewIndex]=\"2\" \n\t\t\t\t\t[columnGroup]=\"centerGroup\" \n\t\t\t\t\t[columns]=\"centerColumns\" \n\t\t\t\t\t[rows]=\"rows\" \n\t\t\t\t\t(bodyScroll)=\"onBodyScroll($event)\"></eui-grid-view>\n\t\t\t<eui-grid-view #view3 *ngIf=\"rightGroup || rightColumns\" \n\t\t\t\t\t[viewIndex]=\"3\" \n\t\t\t\t\t[columnGroup]=\"rightGroup\" \n\t\t\t\t\t[columns]=\"rightColumns\" \n\t\t\t\t\t[rows]=\"rows\" \n\t\t\t\t\t[style.width]=\"rightFrozenWidth\"></eui-grid-view>\n\t\t</div>\n\t\t<eui-pagination *ngIf=\"pagination && (pagePosition=='both' || pagePosition=='bottom')\" class=\"datagrid-pager\" \n\t\t\t\t[total]=\"total\" \n\t\t\t\t[pageSize]=\"pageSize\" \n\t\t\t\t[pageNumber]=\"pageNumber\" \n\t\t\t\t[loading]=\"loading\"\n\t\t\t\t(pageChange)=\"onPageChange($event)\"></eui-pagination>\n\t</div>\n\t<div *ngIf=\"loading\" class=\"datagrid-loading f-row\">\n\t\t<div class=\"datagrid-mask\"></div>\n\t\t<div class=\"datagrid-mask-msg\">{{loadMsg}}</div>\n\t</div>\n";
export declare class GridBaseComponent extends ListBaseComponent {
    cdRef: ChangeDetectorRef;
    columnRefs: QueryList<GridColumnComponent>;
    groupRefs: QueryList<GridColumnGroupComponent>;
    viewRef: ElementRef;
    view1: any;
    view2: any;
    view3: any;
    rowHeight: number;
    rowCss: any;
    frozenWidth: any;
    frozenAlign: string;
    sorts: any[];
    multiSort: boolean;
    showHeader: boolean;
    showFooter: boolean;
    editMode: string;
    clickToEdit: boolean;
    dblclickToEdit: boolean;
    rowDblClick: EventEmitter<{}>;
    cellDblClick: EventEmitter<{}>;
    rowContextMenu: EventEmitter<{}>;
    cellContextMenu: EventEmitter<{}>;
    pageChange: EventEmitter<{}>;
    sortChange: EventEmitter<{}>;
    editBegin: EventEmitter<{}>;
    editEnd: EventEmitter<{}>;
    editCancel: EventEmitter<{}>;
    editingItem: any;
    leftGroup: GridColumnGroupComponent;
    rightGroup: GridColumnGroupComponent;
    centerGroup: GridColumnGroupComponent;
    leftColumns: GridColumnComponent[];
    rightColumns: GridColumnComponent[];
    centerColumns: GridColumnComponent[];
    headerHeight: number;
    footerRows: any[];
    private _rows;
    private _footerData;
    private _filterRules;
    readonly leftFrozenWidth: any;
    readonly rightFrozenWidth: any;
    readonly allColumns: any[];
    rows: any[];
    footerData: any;
    filterRules: any[];
    scrollTop: number;
    constructor(cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    private headerResized;
    ngAfterViewChecked(): void;
    initHeaderHeight(): void;
    initColumns(): void;
    getColumnLayout(group: GridColumnGroupComponent): any[];
    private getColumnCount(group);
    private getColumnIndex(a);
    onBodyScroll(event: any): void;
    addSort(col: GridColumnComponent): void;
    initColumnSort(): void;
    findColumn(field: string): GridColumnComponent;
    addFilterRule(rule: any): void;
    isEditing(row: any, column?: any): boolean;
    beginEdit(row: any, column?: any, rowEl?: any): void;
    endEdit(): void;
    cancelEdit(): void;
}
